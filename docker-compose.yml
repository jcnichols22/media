services:       

# PROWLARR
                              
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    volumes:
      - ${ARRPATH}Prowlarr/config:/config
      - ${ARRPATH}Prowlarr/backup:/data/Backup
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 9696:9696
    restart: unless-stopped
    env_file:
      - '.env'
      
# SONARR                                               
      
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    volumes:
      - ${ARRPATH}Sonarr/config:/config
      - ${ARRPATH}Sonarr/backup:/data/Backup
      - ${ARRPATH}Sonarr/tvseries:/data/tvshows
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    env_file:
      - '.env'
      
# RADARR                                             

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    volumes:
      - ${ARRPATH}Radarr/config:/config
      - ${ARRPATH}Radarr/movies:/data/movies
      - ${ARRPATH}Radarr/backup:/data/Backup
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    env_file:
      - '.env'
      
# LIDARR *INACTIVE*
                                             
  # lidarr:
  #   image: linuxserver/lidarr:latest
  #   container_name: lidarr
  #   hostname: lidarr
  #   volumes:
  #     - ${ARRPATH}Lidarr/config:/config
  #     - ${ARRPATH}Lidarr/music:/data/musicfolder
  #     - ${ARRPATH}Downloads:/downloads
  #   ports:
  #     - 8686:8686
  #   restart: unless-stopped
  #   env_file:
  #     - '.env'
      
# READARR
                                                                                                                   
  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    hostname: readarr
    volumes:
      - ${ARRPATH}Readarr/config:/config
      - ${ARRPATH}Readarr/books:/data/books
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 8787:8787
    restart: unless-stopped
    env_file:
      - '.env'


# JELLYFIN
     
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    ports:
      - '8096:8096/tcp'   # Jellyfin web interface
      - '7359:7359/udp'   # Network discovery
      - '1900:1900/udp'   # DLNA port
    volumes:
      - ${ARRPATH}Jellyfin/config:/config
      - ${ARRPATH}Radarr/movies:/data/Movies
      - ${ARRPATH}Sonarr/tvseries:/data/TVShows
      - ${ARRPATH}Lidarr/music:/data/Music
      - ${ARRPATH}Readarr/books:/data/Books
    environment:
      - JELLYFIN_PublishedServerUrl=http://192.168.0.102 #optional
    env_file:
      - '.env'
    restart: unless-stopped
          
#Â  qBittorrent                                                                                          
                                                                                             
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    hostname: qbittorrent
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    volumes:
      - ${ARRPATH}qbittorrent/config:/config
      - ${ARRPATH}qbittorrent/downloads:/downloads
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    environment:
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    healthcheck:
      start_period: 15s
    env_file:
      - '.env'

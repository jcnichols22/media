services:       

# PROWLARR
                              
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    volumes:
      - /opt/prowlarr_config:/config
      - ${ARRPATH}Prowlarr/backup:/data/Backup
      - ${ARRPATH}qbittorrent/downloads:/downloads

    ports:
      - 9696:9696
    restart: unless-stopped
    env_file:
      - '.env'
      
# SONARR                                               
      
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    volumes:
      - /opt/sonarr_config:/config
      - ${ARRPATH}Sonarr/backup:/data/Backup
      - ${ARRPATH}Sonarr/tvseries:/data/tvshows
      - ${ARRPATH}qbittorrent/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    env_file:
      - '.env'
      
# RADARR                                             

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    volumes:
      - /opt/radarr_config:/config
      - ${ARRPATH}Radarr/movies:/data/movies
      - ${ARRPATH}Radarr/backup:/data/Backup
      - ${ARRPATH}qbittorrent/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    env_file:
      - '.env'
      
# READARR
                                                                                                                   
  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    hostname: readarr
    volumes:
      - /opt/readarr_config:/config
      - ${ARRPATH}Readarr/books:/data/books
      - ${ARRPATH}qbittorrent/downloads:/downloads
    ports:
      - 8787:8787
    restart: unless-stopped
    env_file:
      - '.env'


# JELLYFIN
     
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    ports:
      - '8096:8096/tcp'   # Jellyfin web interface
      - '7359:7359/udp'   # Network discovery
      - '1900:1900/udp'   # DLNA port
    volumes:
      - /opt/jellyfin_config:/config
      - ${ARRPATH}Radarr/movies:/data/Movies
      - ${ARRPATH}Sonarr/tvseries:/data/TVShows
      - ${ARRPATH}Lidarr/music:/data/Music
      - ${ARRPATH}Readarr/books:/data/Books
    environment:
      - JELLYFIN_PublishedServerUrl=http://192.168.0.102 #optional
    env_file:
      - '.env'
    restart: unless-stopped

# JELLYSEERR

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    hostname: jellyseerr
    ports:
      - "5055:5055"
    volumes:
      - /opt/jellyseerr_config:/app/config
      - ${ARRPATH}Jellyfin/config:/app/jellyfin # optional read-only mapping to let Jellyseerr read Jellyfin's config
      - ${ARRPATH}Radarr/movies:/data/Movies   # Allow importing/requesting files
      - ${ARRPATH}Sonarr/tvseries:/data/TVShows
      - ${ARRPATH}Lidarr/music:/data/Music     # If music requests supported (optional)
      - ${ARRPATH}Readarr/books:/data/Books    # If books requests (future support/optional)
    env_file:
      - '.env'
    restart: unless-stopped

          
#Â  qBittorrent                                                                                          
                                                                                             
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - /opt/qbittorrent_config:/config
      - ${ARRPATH}qbittorrent/downloads:/downloads
    ports:
      - 8080:8080 #qbittorrent
      - 6881:6881 #qbittorrent
      - 6881:6881/udp #qbittorrent
    restart: unless-stopped
    env_file:
      - '.env'

  tdarr:
    container_name: tdarr
    hostname: tdarr
    image: ghcr.io/haveagitgat/tdarr_acc:latest  # Intel QuickSync enabled image
    restart: unless-stopped
    network_mode: bridge
    ports:
      - 8265:8265 # web UI
      - 8266:8266 # server port
    environment:
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - ffmpegVersion=7
      - nodeName=MyInternalNode
      - auth=false
      - openBrowser=true
      - maxLogSizeMB=10
      - cronPluginUpdate=
    volumes:
      - /opt/tdarr/server:/app/server
      - /opt/tdarr/configs:/app/configs
      - /opt/tdarr/logs:/app/logs
      - ${ARRPATH}:/media
      - /transcode_cache:/temp
    devices:
      - /dev/dri:/dev/dri  
    env_file:
      - '.env'

  tdarr-node:
    container_name: tdarr-node
    image: ghcr.io/haveagitgat/tdarr_node_acc:latest  # Intel QuickSync enabled node
    restart: unless-stopped
    network_mode: service:tdarr  # Shares network with tdarr server
    environment:
      - UMASK_SET=002
      - nodeName=MyExternalNode
      - serverIP=0.0.0.0
      - serverPort=8266
      - inContainer=true
      - ffmpegVersion=7
      - nodeType=mapped
      - priority=-1
      - cronPluginUpdate=
      - apiKey=
      - maxLogSizeMB=10
      - pollInterval=2000
      - startPaused=false
      - transcodegpuWorkers=1  # Will use QuickSync via VA-API
      - transcodecpuWorkers=2
      - healthcheckgpuWorkers=1
      - healthcheckcpuWorkers=1
    volumes:
      - /opt/tdarr/configs:/app/configs
      - /opt/tdarr/logs:/app/logs
      - ${ARRPATH}:/media
      - /transcode_cache:/temp
    devices:
      - /dev/dri:/dev/dri  # Intel QuickSync
    env_file:
      - '.env'
